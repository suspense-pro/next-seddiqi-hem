@mixin transition-3s {
  transition: $transition-time $transition-name;
}

@mixin bottom-border-animation {
  display: block;
  position: relative;
  &:hover {
    &::after {
      transform: scaleX(1);
      opacity: 1;
    }
  }
  &::after {
    content: "";
    position: absolute;
    width: 100%;
    transform: scaleX(0);
    left: 0;
    transform-origin: left;
    opacity: 0;
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  }
}

.plusIconContainer {
  cursor: pointer;
  position: relative;
  height: rem(12);
  width: rem(12);

  @include lg {
    height: rem(16);
    width: rem(16);
  }

  .line {
    height: rem(1);
    width: rem(12);
    position: absolute;
    left: 0;
    background-color: getColorHex("white");
    top: 50%;
    @include transition-3s;

    @include lg {
      width: rem(16);
    }
  }
  .lineClose {
    transform: rotate(90deg);
  }
}


@mixin underLineHoverWhite {
  &::after {
    background: getColorHex("white");
  }
}

@-webkit-keyframes tracking-in-left-to-right {
  0% {
    width: 0;
  }

  100% {
    width: 100%;
  }
}

@keyframes tracking-in-left-to-right {
  0% {
    width: 0;
  }

  100% {
    width: 100%;
  }
}

@mixin underLinePrimary {
  width: fit-content;
  position: relative;
  overflow-x: hidden;
  padding: 0 rem-calc(1.2);

  @keyframes toRight {
    0% {
      transform: translateX(0);
    }
    50%,
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes fromLeft {
    0% {
      transform: translateX(-100%);
    }
    50%,
    100% {
      transform: translateX(0);
    }
  }

  &::after {
    content: "";
    position: absolute;
    height: rem-calc(1.2);
    width: 100%;
    left: 0;
    bottom: rem-calc(-1.2);
    background-color: getColorHex("black");
    clip-path: polygon(1.2px 0%, 100% 0%, calc(100% - 1.2px) 100%, 0% 100%);

    animation: fromLeft 1s forwards;
    animation-fill-mode: forwards;
    transform: translateX(-100%);
  }

  &:hover {
    &::after {
      animation-play-state: running;
      animation: toRight 1s forwards;
      animation-fill-mode: forwards;
    }
  }
}

@mixin underLinePrimaryLight {
  width: fit-content;
  position: relative;
  overflow-x: hidden;
  padding: 0 rem-calc(1.2);

  @keyframes toRight {
    0% {
      transform: translateX(0);
    }
    50%,
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes fromLeft {
    0% {
      transform: translateX(-100%);
    }
    50%,
    100% {
      transform: translateX(0);
    }
  }

  &::after {
    content: "";
    position: absolute;
    height: rem-calc(1.2);
    width: 100%;
    left: 0;
    bottom: rem-calc(-1.2);
    background-color: getColorHex("white");
    clip-path: polygon(1.2px 0%, 100% 0%, calc(100% - 1.2px) 100%, 0% 100%);

    animation: fromLeft 1s forwards;
    animation-fill-mode: forwards;
    transform: translateX(-100%);
  }

  &:hover {
    &::after {
      animation-play-state: running;
      animation: toRight 1s forwards;
      animation-fill-mode: forwards;
    }
  }
}

@mixin underLineSecondary {
  width: fit-content;
  position: relative;
  overflow-x: hidden;
  padding: 0 rem-calc(1.2);

  @keyframes fromLeft {
    0% {
      transform: translateX(-100%);
    }
    50%,
    100% {
      transform: translateX(0);
    }
  }

  @keyframes toRight {
    0% {
      transform: translateX(0);
    }
    50%,
    100% {
      transform: translateX(100%);
    }
  }

  &::after {
    content: "";
    position: absolute;
    height: rem-calc(1.2);
    width: 100%;
    left: 0;
    bottom: rem-calc(-1.2);
    background-color: getColorHex("black");
    clip-path: polygon(1.2px 0%, 100% 0%, calc(100% - 1.2px) 100%, 0% 100%);

    animation: toRight 1s forwards;
    animation-fill-mode: forwards;
    transform: translateX(-100%);
  }

  &:hover {
    &::after {
      animation-play-state: running;
      animation: fromLeft 1s forwards;
      animation-fill-mode: forwards;
    }
  }
}

@mixin underLineSecondaryLight {
  width: fit-content;
  position: relative;
  overflow-x: hidden;
  padding: 0 rem-calc(1.2);

  @keyframes fromLeft {
    0% {
      transform: translateX(-100%);
    }
    50%,
    100% {
      transform: translateX(0);
    }
  }

  @keyframes toRight {
    0% {
      transform: translateX(0);
    }
    50%,
    100% {
      transform: translateX(100%);
    }
  }

  &::after {
    content: "";
    position: absolute;
    height: rem-calc(1.2);
    width: 100%;
    left: 0;
    bottom: rem-calc(-1.2);
    background-color: getColorHex("white");
    clip-path: polygon(1.2px 0%, 100% 0%, calc(100% - 1.2px) 100%, 0% 100%);

    animation: toRight 1s forwards;
    animation-fill-mode: forwards;
    transform: translateX(-100%);
  }

  &:hover {
    &::after {
      animation-play-state: running;
      animation: fromLeft 1s forwards;
      animation-fill-mode: forwards;
    }
  }
}

@mixin underLinePreselect {
  width: fit-content;
  position: relative;
  overflow-x: hidden;
  padding: 0 rem-calc(1.2);

  &::after {
    content: "";
    position: absolute;
    height: rem-calc(1.2);
    width: 100%;
    left: 0;
    bottom: rem-calc(-1.2);
    background-color: getColorHex("black");
    clip-path: polygon(1.2px 0%, 100% 0%, calc(100% - 1.2px) 100%, 0% 100%);
  }
}

@mixin underLinePreselectLight {
  width: fit-content;
  position: relative;
  overflow-x: hidden;
  padding: 0 rem-calc(1.2);

  &::after {
    content: "";
    position: absolute;
    height: rem-calc(1.2);
    width: 100%;
    left: 0;
    bottom: rem-calc(-1.2);
    background-color: getColorHex("white");
    clip-path: polygon(1.2px 0%, 100% 0%, calc(100% - 1.2px) 100%, 0% 100%);
  }
}

.animated-link-wrapper {
  width: fit-content;
  overflow-x: hidden;
  flex-shrink: 0;
}

.animated-link {
  margin: 0;
  color: getColorHex("black");
  font-variant-numeric: lining-nums proportional-nums;
  @include body_regular;
  font-size: rem-calc(14);
  font-style: normal;
  font-weight: normal;
  line-height: 1.4;
  text-decoration: none;
  overflow: hidden;
  cursor: pointer;
}

.animated-link.primary.light {
  @include underLinePrimaryLight;
  color: getColorHex("white");
}

.animated-link.primary.dark {
  @include underLinePrimary;
  color: getColorHex("black");
}

.animated-link.secondary.light {
  @include underLineSecondaryLight;
  color: getColorHex("white");
}

.animated-link.secondary.dark {
  @include underLineSecondary;
  color: getColorHex("black");
}

.animated-link.muted {
  opacity: 0.6;

  &:hover {
    opacity: 1;
  }
}

.animated-link.preselect.light {
  @include underLinePreselectLight;
  color: getColorHex("white");
}

.animated-link.preselect.dark {
  @include underLinePreselect;
  color: getColorHex("black");
}
